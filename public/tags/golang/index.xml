<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>golang on Zkynet.io</title>
    <link>https://www.zkynet.io/tags/golang/</link>
    <description>Recent content in golang on Zkynet.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 03 Apr 2015 02:13:50 +0000</lastBuildDate>
    
	<atom:link href="https://www.zkynet.io/tags/golang/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>A new website</title>
      <link>https://www.zkynet.io/blog/newwebsite/</link>
      <pubDate>Fri, 03 Apr 2015 02:13:50 +0000</pubDate>
      
      <guid>https://www.zkynet.io/blog/newwebsite/</guid>
      <description>This website is largely thanks to Max Dima and Andrei.
The Artwork Max Dima made all the artwork, his Illustrator skills are quite remarkable. He is responsible for websites like https://online.io and a few others that are in the making. His behance profile is also something to behold.
The Code Andrei is responsible for the website it self. He is the CTO of Engage and works as a fullstack developer at Around25.</description>
    </item>
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>https://www.zkynet.io/parking/goisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 02:13:50 +0000</pubDate>
      
      <guid>https://www.zkynet.io/parking/goisforlovers/</guid>
      <description>Hugo uses the excellent go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in go templates.
This document is a brief primer on using go templates.</description>
    </item>
    
    <item>
      <title>Getting Started with Hugo</title>
      <link>https://www.zkynet.io/parking/hugoisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://www.zkynet.io/parking/hugoisforlovers/</guid>
      <description>Step 1. Install Hugo Goto hugo releases and download the appropriate version for your os and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at installing hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
 Clone the hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313  Corresponding pseudo commands:</description>
    </item>
    
    <item>
      <title>What is Zkynet.IO?</title>
      <link>https://www.zkynet.io/blog/whatiszkynet/</link>
      <pubDate>Mon, 03 Mar 2014 02:13:50 +0000</pubDate>
      
      <guid>https://www.zkynet.io/blog/whatiszkynet/</guid>
      <description>We are a small company that specializes in high skill level projects. The goal is to remain a relatively small company, doing so we can have greater oversight of any work we do and ensure the quality of our service.
Things we do Here is a short list that includes some of the things we are involved in:
 Software Engineering using Golang Infrastructure design System Administration Machine Learning using Tensorflow Networking</description>
    </item>
    
  </channel>
</rss>